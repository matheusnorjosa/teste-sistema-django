# Generated by Django 5.2.4 on 2025-08-12 23:52

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aprovacao',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_aprovacao', models.DateTimeField(auto_now_add=True)),
                ('status_decisao', models.CharField(choices=[('Aprovado', 'Aprovado'), ('Reprovado', 'Reprovado')], max_length=20)),
                ('justificativa', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-data_aprovacao'],
            },
        ),
        migrations.CreateModel(
            name='DisponibilidadeFormadores',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_bloqueio', models.DateField()),
                ('hora_inicio', models.TimeField()),
                ('hora_fim', models.TimeField()),
                ('tipo_bloqueio', models.CharField(max_length=50)),
                ('motivo', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Disponibilidade de Formador',
                'verbose_name_plural': 'Disponibilidades de Formadores',
                'ordering': ['formador', 'data_bloqueio', 'hora_inicio'],
            },
        ),
        migrations.CreateModel(
            name='EventoGoogleCalendar',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('google_calendar_id', models.CharField(max_length=255, unique=True)),
                ('link_evento', models.TextField(blank=True, null=True)),
                ('link_meet', models.TextField(blank=True, null=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('status_sincronizacao', models.CharField(choices=[('Pendente', 'Pendente'), ('OK', 'OK'), ('Erro', 'Erro')], default='Pendente', max_length=20)),
                ('mensagem_erro', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Evento Google Calendar',
                'verbose_name_plural': 'Eventos Google Calendar',
            },
        ),
        migrations.CreateModel(
            name='FormadoresSolicitacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Formador da Solicitação',
                'verbose_name_plural': 'Formadores da Solicitação',
            },
        ),
        migrations.CreateModel(
            name='LogAuditoria',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_hora', models.DateTimeField(auto_now_add=True)),
                ('acao', models.CharField(max_length=255)),
                ('entidade_afetada_id', models.UUIDField(blank=True, null=True)),
                ('detalhes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Log de Auditoria',
                'verbose_name_plural': 'Logs de Auditoria',
                'ordering': ['-data_hora'],
            },
        ),
        migrations.CreateModel(
            name='Solicitacao',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('titulo_evento', models.CharField(max_length=255)),
                ('data_solicitacao', models.DateTimeField(auto_now_add=True)),
                ('data_inicio', models.DateTimeField()),
                ('data_fim', models.DateTimeField()),
                ('numero_encontro_formativo', models.CharField(blank=True, max_length=50, null=True)),
                ('coordenador_acompanha', models.BooleanField(default=False)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Pendente', 'Pendente'), ('Aprovado', 'Aprovado'), ('Reprovado', 'Reprovado')], default='Pendente', max_length=20)),
                ('data_aprovacao_rejeicao', models.DateTimeField(blank=True, null=True)),
                ('justificativa_rejeicao', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-data_solicitacao'],
            },
        ),
        migrations.AlterModelOptions(
            name='formador',
            options={'ordering': ['nome'], 'verbose_name': 'Formador', 'verbose_name_plural': 'Formadores'},
        ),
        migrations.AlterModelOptions(
            name='municipio',
            options={'ordering': ['nome', 'uf'], 'verbose_name': 'Município', 'verbose_name_plural': 'Municípios'},
        ),
        migrations.AlterModelOptions(
            name='projeto',
            options={'ordering': ['nome'], 'verbose_name': 'Projeto', 'verbose_name_plural': 'Projetos'},
        ),
        migrations.AlterModelOptions(
            name='tipoevento',
            options={'ordering': ['nome'], 'verbose_name': 'Tipo de Evento', 'verbose_name_plural': 'Tipos de Evento'},
        ),
        migrations.AddField(
            model_name='municipio',
            name='uf',
            field=models.CharField(blank=True, default='', max_length=2, verbose_name='UF'),
        ),
        migrations.AlterField(
            model_name='municipio',
            name='nome',
            field=models.CharField(max_length=255, verbose_name='Nome do Município'),
        ),
        migrations.AlterUniqueTogether(
            name='municipio',
            unique_together={('nome', 'uf')},
        ),
        migrations.AddIndex(
            model_name='formador',
            index=models.Index(fields=['email'], name='core_formad_email_3b05da_idx'),
        ),
        migrations.AddIndex(
            model_name='municipio',
            index=models.Index(fields=['nome', 'uf'], name='core_munici_nome_df460a_idx'),
        ),
        migrations.AddField(
            model_name='aprovacao',
            name='usuario_aprovador',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='aprovacoes_realizadas', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='disponibilidadeformadores',
            name='formador',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disponibilidades', to='core.formador'),
        ),
        migrations.AddField(
            model_name='eventogooglecalendar',
            name='usuario_criador',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='eventos_criados', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='formadoressolicitacao',
            name='formador',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.formador'),
        ),
        migrations.AddField(
            model_name='logauditoria',
            name='usuario',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='solicitacao',
            name='formadores',
            field=models.ManyToManyField(related_name='solicitacoes', through='core.FormadoresSolicitacao', to='core.formador'),
        ),
        migrations.AddField(
            model_name='solicitacao',
            name='municipio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.municipio'),
        ),
        migrations.AddField(
            model_name='solicitacao',
            name='projeto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.projeto'),
        ),
        migrations.AddField(
            model_name='solicitacao',
            name='tipo_evento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.tipoevento'),
        ),
        migrations.AddField(
            model_name='solicitacao',
            name='usuario_aprovador',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='solicitacoes_decididas', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='solicitacao',
            name='usuario_solicitante',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='solicitacoes_criadas', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='formadoressolicitacao',
            name='solicitacao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.solicitacao'),
        ),
        migrations.AddField(
            model_name='eventogooglecalendar',
            name='solicitacao',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='evento_google', to='core.solicitacao'),
        ),
        migrations.AddField(
            model_name='aprovacao',
            name='solicitacao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aprovacoes', to='core.solicitacao'),
        ),
        migrations.AddConstraint(
            model_name='disponibilidadeformadores',
            constraint=models.CheckConstraint(condition=models.Q(('hora_fim__gt', models.F('hora_inicio'))), name='hora_fim_maior_que_inicio'),
        ),
        migrations.AddConstraint(
            model_name='disponibilidadeformadores',
            constraint=models.UniqueConstraint(fields=('formador', 'data_bloqueio', 'hora_inicio', 'hora_fim'), name='uniq_formador_intervalo'),
        ),
        migrations.AddIndex(
            model_name='solicitacao',
            index=models.Index(fields=['data_inicio'], name='core_solici_data_in_82e9f6_idx'),
        ),
        migrations.AddIndex(
            model_name='solicitacao',
            index=models.Index(fields=['data_fim'], name='core_solici_data_fi_9cd4a2_idx'),
        ),
        migrations.AddIndex(
            model_name='solicitacao',
            index=models.Index(fields=['status'], name='core_solici_status_3aa1ea_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='formadoressolicitacao',
            unique_together={('solicitacao', 'formador')},
        ),
        migrations.AddIndex(
            model_name='eventogooglecalendar',
            index=models.Index(fields=['google_calendar_id'], name='core_evento_google__8bfd32_idx'),
        ),
    ]
