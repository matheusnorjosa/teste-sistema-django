# Generated by Django 5.2.5 on 2025-09-03 05:10

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0018_usuario_cpf_usuario_municipio_usuario_telefone"),
    ]

    operations = [
        migrations.CreateModel(
            name="LogComunicacao",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "grupo_destinatario",
                    models.CharField(
                        blank=True,
                        help_text="superintendencia, controle, coordenador, etc.",
                        max_length=50,
                        verbose_name="Grupo destinatário",
                    ),
                ),
                (
                    "tipo_comunicacao",
                    models.CharField(
                        choices=[
                            ("notificacao_sistema", "Notificação no sistema"),
                            ("email", "E-mail"),
                            ("sms", "SMS"),
                            ("whatsapp", "WhatsApp"),
                            ("push_notification", "Push notification"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de comunicação",
                    ),
                ),
                ("assunto", models.CharField(max_length=200, verbose_name="Assunto")),
                ("conteudo", models.TextField(verbose_name="Conteúdo")),
                (
                    "endereco_destinatario",
                    models.CharField(
                        blank=True,
                        help_text="E-mail, telefone, etc.",
                        max_length=100,
                        verbose_name="Endereço destinatário",
                    ),
                ),
                (
                    "status_envio",
                    models.CharField(
                        choices=[
                            ("enviado", "Enviado com sucesso"),
                            ("falhado", "Falha no envio"),
                            ("pendente", "Pendente"),
                            ("cancelado", "Cancelado"),
                        ],
                        default="pendente",
                        max_length=20,
                        verbose_name="Status do envio",
                    ),
                ),
                (
                    "erro_envio",
                    models.TextField(blank=True, verbose_name="Erro no envio"),
                ),
                (
                    "entidade_relacionada_id",
                    models.UUIDField(
                        blank=True, null=True, verbose_name="ID da entidade relacionada"
                    ),
                ),
                (
                    "entidade_relacionada_tipo",
                    models.CharField(
                        blank=True,
                        help_text="solicitacao, evento, etc.",
                        max_length=50,
                        verbose_name="Tipo da entidade",
                    ),
                ),
                (
                    "metadados",
                    models.JSONField(
                        blank=True,
                        help_text="Dados adicionais em JSON",
                        null=True,
                        verbose_name="Metadados",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "enviado_em",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Enviado em"
                    ),
                ),
                (
                    "usuario_destinatario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="comunicacoes_recebidas",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Destinatário",
                    ),
                ),
                (
                    "usuario_remetente",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="comunicacoes_enviadas",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Remetente",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log de Comunicação",
                "verbose_name_plural": "Logs de Comunicações",
                "ordering": ["-created_at"],
                "permissions": [
                    ("view_logs_comunicacao", "Can view communication logs")
                ],
                "indexes": [
                    models.Index(
                        fields=["created_at"], name="core_logcom_created_5c5aee_idx"
                    ),
                    models.Index(
                        fields=["tipo_comunicacao", "status_envio"],
                        name="core_logcom_tipo_co_766c0d_idx",
                    ),
                    models.Index(
                        fields=["usuario_destinatario", "status_envio"],
                        name="core_logcom_usuario_3e2bae_idx",
                    ),
                    models.Index(
                        fields=["grupo_destinatario"],
                        name="core_logcom_grupo_d_2bdc0c_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Notificacao",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("solicitacao_nova", "Nova solicitação"),
                            ("solicitacao_confirmacao", "Confirmação de solicitação"),
                            ("solicitacao_aprovada", "Solicitação aprovada"),
                            ("solicitacao_reprovada", "Solicitação reprovada"),
                            ("pre_agenda_nova", "Nova solicitação em pré-agenda"),
                            (
                                "pre_agenda_aprovada",
                                "Solicitação aprovada → pré-agenda",
                            ),
                            ("evento_preparacao", "Evento em preparação"),
                            ("evento_confirmado", "Evento confirmado"),
                            ("evento_criado", "Evento criado no Google Calendar"),
                            ("evento_cancelado", "Evento cancelado"),
                            ("processo_concluido", "Processo concluído"),
                            ("sistema_manutencao", "Manutenção do sistema"),
                            ("sistema_atualizacao", "Atualização disponível"),
                        ],
                        max_length=30,
                        verbose_name="Tipo",
                    ),
                ),
                ("titulo", models.CharField(max_length=100, verbose_name="Título")),
                ("mensagem", models.TextField(verbose_name="Mensagem")),
                (
                    "link_acao",
                    models.URLField(blank=True, null=True, verbose_name="Link da ação"),
                ),
                (
                    "entidade_relacionada_id",
                    models.UUIDField(
                        blank=True,
                        help_text="ID da solicitação, evento, etc. relacionado à notificação",
                        null=True,
                        verbose_name="ID da entidade relacionada",
                    ),
                ),
                ("lida", models.BooleanField(default=False, verbose_name="Lida")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criada em"),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notificacoes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notificação",
                "verbose_name_plural": "Notificações",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["usuario", "lida"],
                        name="core_notifi_usuario_cd404b_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="core_notifi_created_b50b8d_idx"
                    ),
                    models.Index(fields=["tipo"], name="core_notifi_tipo_0b8100_idx"),
                ],
            },
        ),
    ]
