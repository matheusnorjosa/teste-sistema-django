#!/usr/bin/env python3
"""
Script para configurar OAuth2 para Google Sheets manualmente
Gera URL de autoriza√ß√£o e permite inserir c√≥digo manualmente
"""

import json
import requests
from urllib.parse import parse_qs, urlparse

def setup_oauth_manual():
    """Configura OAuth2 manualmente sem browser"""

    # Carregar credenciais
    with open('credentials.json', 'r') as f:
        creds = json.load(f)

    client_config = creds['installed']
    client_id = client_config['client_id']
    client_secret = client_config['client_secret']

    # Escopos necess√°rios
    scopes = [
        'https://www.googleapis.com/auth/spreadsheets.readonly',
        'https://www.googleapis.com/auth/drive.readonly'
    ]
    scope_string = ' '.join(scopes)

    # Gerar URL de autoriza√ß√£o
    auth_url = (
        f"https://accounts.google.com/o/oauth2/auth?"
        f"client_id={client_id}&"
        f"redirect_uri=http://localhost&"
        f"scope={scope_string}&"
        f"response_type=code&"
        f"access_type=offline&"
        f"prompt=consent"
    )

    print("üîó URL de Autoriza√ß√£o:")
    print(auth_url)
    print("\nüìã Instru√ß√µes:")
    print("1. Acesse a URL acima no seu navegador")
    print("2. Fa√ßa login e autorize o acesso")
    print("3. Voc√™ ser√° redirecionado para uma p√°gina de erro")
    print("4. Copie o c√≥digo da URL (par√¢metro 'code')")
    print("5. Cole o c√≥digo aqui")

    # Aguardar c√≥digo do usu√°rio
    auth_code = input("\nüîë Cole o c√≥digo de autoriza√ß√£o aqui: ").strip()

    if not auth_code:
        print("‚ùå C√≥digo n√£o fornecido!")
        return False

    print("üîÑ Trocando c√≥digo por token...")

    # Trocar c√≥digo por token
    token_url = "https://oauth2.googleapis.com/token"
    token_data = {
        'client_id': client_id,
        'client_secret': client_secret,
        'code': auth_code,
        'grant_type': 'authorization_code',
        'redirect_uri': 'http://localhost'
    }

    try:
        response = requests.post(token_url, data=token_data)
        response.raise_for_status()

        token_info = response.json()

        # Salvar token
        authorized_user_info = {
            "client_id": client_id,
            "client_secret": client_secret,
            "refresh_token": token_info.get('refresh_token'),
            "access_token": token_info.get('access_token'),
            "type": "authorized_user"
        }

        with open('token.json', 'w') as f:
            json.dump(authorized_user_info, f, indent=2)

        print("‚úÖ Token salvo em token.json")
        print("üéâ Configura√ß√£o OAuth conclu√≠da!")

        return True

    except Exception as e:
        print(f"‚ùå Erro ao obter token: {e}")
        return False

if __name__ == "__main__":
    setup_oauth_manual()